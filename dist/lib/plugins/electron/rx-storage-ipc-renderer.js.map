{"version":3,"file":"rx-storage-ipc-renderer.js","names":["getRxStorageIpcRenderer","settings","storage","getRxStorageMessageChannel","name","statics","createRemoteStorage","port","params","messageChannel","getFromMapOrThrow","messageChannelByPort","otherPort","port1","postMessage","message","ipcRenderer","send","IPC_RENDERER_TO_MAIN","IPC_RENDERER_KEY_PREFIX","key","join"],"sources":["../../../../src/plugins/electron/rx-storage-ipc-renderer.ts"],"sourcesContent":["import {\n    getRxStorageMessageChannel,\n    RxStorageMessageChannel,\n    RxStorageMessageToRemote\n} from '../../rx-storage-message-channel';\nimport type {\n    RxStorageStatics\n} from '../../types';\nimport { getFromMapOrThrow } from '../../util';\nimport {\n    IPC_RENDERER_KEY_PREFIX,\n    IPC_RENDERER_TO_MAIN\n} from './electron-helper';\n\nexport type RxStorageIpcRendererSettings = {\n    key: string;\n    statics: RxStorageStatics;\n    ipcRenderer: any;\n};\n\nexport type RxStorageIpcRenderer = RxStorageMessageChannel;\nexport function getRxStorageIpcRenderer(\n    settings: RxStorageIpcRendererSettings\n): RxStorageIpcRenderer {\n\n    const storage = getRxStorageMessageChannel({\n        name: 'ipc-renderer',\n        statics: settings.statics,\n        createRemoteStorage: (\n            port,\n            params\n        ) => {\n\n            /**\n             * Electron does not allow to send messages\n             * via ports from ipcRenderer->ipcMain.\n             * Therefore we have to overwrite the port1.postMessage()\n             * so that it works over args.ipcMain.on() messages.\n             */\n            const messageChannel = getFromMapOrThrow(storage.messageChannelByPort, port);\n            const otherPort = messageChannel.port1;\n            otherPort.postMessage = function (message: RxStorageMessageToRemote) {\n                settings.ipcRenderer.send(IPC_RENDERER_TO_MAIN, message);\n            };\n\n            settings.ipcRenderer.postMessage(\n                [\n                    IPC_RENDERER_KEY_PREFIX,\n                    'postMessage',\n                    settings.key,\n                    'createStorageInstance'\n                ].join('|'),\n                params,\n                [port]\n            );\n        }\n    });\n    return storage;\n}\n"],"mappings":";;;;;;AAAA;AAQA;AACA;AAYO,SAASA,uBAAuB,CACnCC,QAAsC,EAClB;EAEpB,IAAMC,OAAO,GAAG,IAAAC,mDAA0B,EAAC;IACvCC,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAEJ,QAAQ,CAACI,OAAO;IACzBC,mBAAmB,EAAE,6BACjBC,IAAI,EACJC,MAAM,EACL;MAED;AACZ;AACA;AACA;AACA;AACA;MACY,IAAMC,cAAc,GAAG,IAAAC,uBAAiB,EAACR,OAAO,CAACS,oBAAoB,EAAEJ,IAAI,CAAC;MAC5E,IAAMK,SAAS,GAAGH,cAAc,CAACI,KAAK;MACtCD,SAAS,CAACE,WAAW,GAAG,UAAUC,OAAiC,EAAE;QACjEd,QAAQ,CAACe,WAAW,CAACC,IAAI,CAACC,oCAAoB,EAAEH,OAAO,CAAC;MAC5D,CAAC;MAEDd,QAAQ,CAACe,WAAW,CAACF,WAAW,CAC5B,CACIK,uCAAuB,EACvB,aAAa,EACblB,QAAQ,CAACmB,GAAG,EACZ,uBAAuB,CAC1B,CAACC,IAAI,CAAC,GAAG,CAAC,EACXb,MAAM,EACN,CAACD,IAAI,CAAC,CACT;IACL;EACJ,CAAC,CAAC;EACF,OAAOL,OAAO;AAClB"}